# .github/workflows/action_bn_ati.yml
name: Build & Deploy BN_ATI Report

on:
  workflow_dispatch:
  schedule:
    - cron: "22 6 * * *"   # daily at 06:22 UTC
  push:
    paths:
      - BN_ATI_REPORT/**
      - .github/workflows/action_bn_ati.yml

permissions:
  contents: write   # <-- needed to push commits
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: BN_ATI_REPORT

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt

      - name: Build report (writes to BN_ATI_REPORT/docs)
        run: python scripts/build_report.py

      - name: Ensure .nojekyll
        run: touch docs/.nojekyll

      # Commit AFTER building; then rebase if needed, then push
      - name: Commit generated files (optional)
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # stage only if there are changes under docs/
          if ! git diff --quiet -- docs; then
            git add docs/report.json docs/data.sqlite docs/index.html docs/weak_bn_id.json docs/.nojekyll
            git commit -m "BN_ATI report update ($(date -u +'%Y-%m-%dT%H:%M:%SZ'))" || true

            # In case the branch moved while we were building, rebase then push
            git pull --rebase --autostash origin "${GITHUB_REF_NAME}" || true
            git push origin HEAD:"${GITHUB_REF_NAME}"
          else
            echo "No changes in docs/ to commit."
          fi

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Path is from repo root
          path: BN_ATI_REPORT/docs

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
